/* PDF View - For a colored PDF that looks like the screen's light theme */
@media print {
    @page {
        /* B4 Portrait (353mm x 250mm) is wider than A4 Landscape (297mm x 210mm)
           and A4 Portrait (210mm x 297mm) */
        size: B4 Portrait;
        margin: 0.75cm; /* Unified margin, adjust as needed */
    }

    body {
        background-color: var(--vscode-light-background) !important;
        color: var(--vscode-light-foreground) !important;
        -webkit-print-color-adjust: exact !important; /* Chrome, Safari, Edge */
        color-adjust: exact !important; /* Standard */
        /* Base font settings from .markdown-preview in main.css will apply */
    }

    .markdown-preview {
        /* Override screen-specific layout that's not ideal for print */
        padding: 0 !important; /* Remove complex screen padding */
        margin: 0 !important; /* Rely on @page margins */
        width: auto !important; /* Use full printable width */
        box-shadow: none !important; /* No shadows in print */
        border: none !important; /* No main border for the preview area in print */
        transition: none !important; /* No transitions in print */

        /* Ensure light theme colors are explicitly set */
        background-color: var(--vscode-light-background) !important; /* Explicit for print */
        color: var(--vscode-light-foreground) !important; /* Explicit for print */
        /* Font family, size, weight, line-height are inherited from main.css rules */
    }

    /* Ensure all transitions are off for print */
    .markdown-preview *,
    .markdown-preview *::before,
    .markdown-preview *::after {
        transition: none !important;
    }

    /* Links: Ensure they are styled as per light theme, no hover effects */
    .markdown-preview a,
    .markdown-preview a:hover {
        color: var(--vscode-light-link) !important;
        border-bottom-color: var(--vscode-light-link) !important;
        text-decoration: none !important; /* As per main style */
    }

    /* Uncomment to display URLs after links in print, common practice:
    .markdown-preview a[href^="http"]::after,
    .markdown-preview a[href^="https"]::after {
        content: " (" attr(href) ")";
        font-size: 0.85em;
        color: var(--vscode-light-comment); // Use a comment color variable
        word-break: break-all; // Prevent long URLs from overflowing
        display: inline; // Ensure it flows with text
    }
    .markdown-preview a[href^="#"]::after, // Don't show for internal links
    .markdown-preview a[href^="mailto:"]::after,
    .markdown-preview a[href^="tel:"]::after {
        content: "";
    }
    */

    /* Ensure backgrounds, borders, and specific colors print correctly */
    /* This list should cover elements that have specific background/border colors in the light theme */
    .markdown-preview h1, /* For border-bottom */
    .markdown-preview h2, /* For border-bottom */
    .markdown-preview h2[id^='you'],
    .markdown-preview h2[id^='me'],
    .markdown-preview hr,
    .markdown-preview pre,
    .markdown-preview :not(pre) > code,
    .markdown-preview blockquote,
    .markdown-preview th,
    .markdown-preview tr:nth-child(even),
    .markdown-preview img,
    .markdown-preview table, /* For borders on table/td */
    .markdown-preview td,
    .markdown-preview .callout, /* For callout backgrounds and borders */
    .markdown-preview code[class*='language-'], /* For PrismJS backgrounds */
    .markdown-preview pre[class*='language-'] {
        -webkit-print-color-adjust: exact !important;
        color-adjust: exact !important;
    }
    /* Ensure PrismJS token colors also print correctly */
    .markdown-preview .token {
        -webkit-print-color-adjust: exact !important;
        color-adjust: exact !important;
    }


    /* Code blocks and KaTeX: ensure wrapping and visibility */
    .markdown-preview pre,
    .markdown-preview pre code, /* Target code inside pre as well */
    .markdown-preview .katex-display {
        white-space: pre-wrap !important; /* Wrap long lines */
        word-wrap: break-word !important; /* Break long words if they overflow */
        overflow: visible !important; /* Avoid content being cut off */
    }

    /* Page break control: avoid breaking elements undesirably */
    .markdown-preview h1,
    .markdown-preview h2,
    .markdown-preview h3,
    .markdown-preview h4,
    .markdown-preview h5,
    .markdown-preview h6,
    .markdown-preview .callout-title {
        page-break-after: avoid; /* Don't break right after a heading or title */
        page-break-inside: avoid; /* Don't break a heading/title itself */
    }

    .markdown-preview table,
    .markdown-preview pre,
    .markdown-preview blockquote,
    .markdown-preview img,
    .markdown-preview ul,
    .markdown-preview ol,
    .markdown-preview .katex-display,
    .markdown-preview .callout,
    .markdown-preview figure /* If you use figures */ {
        page-break-inside: avoid; /* Try to keep these elements on a single page */
    }

    /* Images: ensure they scale and don't overflow */
    .markdown-preview img {
        max-width: 100% !important;
        height: auto !important;
    }

    /* The existing PrismJS light theme token styles are global and will apply.
       The color-adjust: exact directive helps ensure they are printed.
       The br tag styling from main.css is also global and will apply as defined. */

    /* Remove any elements specifically marked as no-print */
    .no-print,
    [data-no-print] {
        display: none !important;
    }
}
